////
/// @group Flexbox
/// @since 1.0.0
////

/// This defines a flex container; inline or block depending on the given value. It enables a flex context for all its direct children.
/// #### Syntax :
/// ```markup
///   flex-display(inline?);
/// ```
/// @param {string} $inline [false] - [optional] inline: <small>The element behaves like an inline element</small>
/// @example scss - scss
///  .foo{
///        @include flex-display;
///      }
/// @example css - CSS
///  .foo {
///        display: -webkit-box;
///        display: -webkit-flex;
///        display: -moz-box;
///        display: -moz-flex;
///        display: -ms-flexbox;
///        display: flex;
///  }
@mixin flex-display($inline : false)
{
    @if $inline
    {
        display: -webkit-inline-box;
        display: -webkit-inline-flex;
        display: -moz-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
    }
    @else
    {
        display: -webkit-box;
        display: -webkit-flex;
        display: -moz-box; 
        display: -moz-flex;
        display: -ms-flexbox;
        display: flex;
    }
}