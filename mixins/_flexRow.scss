////
/// @group Flexbox
/// @since 1.0.0
////

/// This defines a flex Row container 
/// #### Syntax :
/// ```markup
///   flex-row(<'justify-content'>?,<'align-items'>?,Reverse[true | false ]?);
/// ```
/// @param {string | false} $justify [flex-start] -            Defines the justify-content of the flex item
/// @param {string | false} $align   [flex-start] -            Defines the align-items of the flex item
/// @param {boolean} $reverse [false] - [optional] Defines the flex-direction of the flex item
/// @example scss - scss
///  .foo{
///        @include flex-row();
///      }
/// @example css - CSS
///  .foo {
 ///       display: -webkit-box;
 ///       display: -webkit-flex;
 ///       display: -moz-box;
 ///       display: -moz-flex;
 ///       display: -ms-flexbox;
 ///       display: flex;
 ///       -webkit-box-orient: horizontal;
 ///       -webkit-box-direction: normal;
 ///       -webkit-flex-direction: row;
 ///       -ms-flex-direction: row;
 ///       flex-direction: row;
 ///       -webkit-box-pack: start;
 ///       -webkit-justify-content: flex-start;
 ///       -ms-flex-pack: start;
 ///       justify-content: flex-start;
 ///       -webkit-box-align: start;
 ///       -webkit-align-items: flex-start;
 ///       -ms-flex-align: start;
 ///       align-items: flex-start;
///  }
@mixin flex-row ($justify : flex-start, $align : flex-start ,$reverse:false)
{
    @include flex-display(false);
    @include flex-direction(if($reverse,row-reverse,row));
    @if $justify{  @include justify-content($justify);}
    @if $align  {  @include align-items($align);} 
}